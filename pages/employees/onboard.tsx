import { NextPage } from 'next';
import Head from 'next/head';
import React from 'react';
import { Button } from '../../src/components/Button/Button.component';
import { Input } from '../../src/components/Input/Input.component';
import { Formik, FormikProps } from 'formik';
import { useAppSelector } from 'src/redux/hooks';
import { SelectInput } from '../../src/components/Input/seletct-input';
import { useRouter } from 'next/router';
import { EmployeeOnboardingValidationSchema } from 'src/helpers/validation';
import { EmployeeOnboarding } from '@/components/types';

const EmployeeOnboard: NextPage = () => {
  const { user, countries } = useAppSelector((state) => state);
  const paymentOptions = [
    { name: 'Bank', id: 'bank' },
    { name: 'Card', id: 'card' },
    { name: 'Wallet', id: 'wallet' },
    { name: 'Crypto', id: 'crypto' },
  ];

  const BankNames = [
    { name: 'First Bank Of Nigeria', id: 'FBN' },
    { name: 'GT Bank Plc', id: 'GTB' },
    { name: 'United Bank for Africa', id: 'UBA' },
    { name: 'Access Bank', id: 'Access' },
    { name: 'Sterling Bank', id: 'Sterling' },
  ];
  const router = useRouter();

  if (user) {
    router.replace('/');
    return null;
  }
  // const handleSubmit = () => {
  //   console.log('values got submitted');
  // };
  return (
    <div className="employee-onboard">
      <Head>
        <title>Employee Onboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="employee-onboard__section">
        <h1 className="employee-onboard__title">Employee Onboarding</h1>
        <p className="employee-onboard__subtext">
          {' '}
          Enter your details to complete your onboarding{' '}
        </p>
        <Formik
          initialValues={{
            country: '',
            payoutMethod: '',
            bankName: '',
            accountNumber: '',
          }}
          validationSchema={EmployeeOnboardingValidationSchema}
          onSubmit={(values) => {
            console.log(values);
          }}
        >
          {(props: FormikProps<EmployeeOnboarding>) => {
            const {
              handleChange,
              handleSubmit,
              handleBlur,
              values,
              errors,
              touched,
              isSubmitting,
            } = props;
            return (
              <form
                onSubmit={handleSubmit}
                className="create-organization-form"
                autoComplete="off"
              >
                <div className="employee-onboard__form-input-section">
                  <div className="employee-onboard__form-grid">
                    <SelectInput
                      options={countries}
                      displayValue="name"
                      actualValue="id"
                      name="country"
                      value={values.country}
                      label="Country of Origin"
                      onChange={handleChange}
                      onBlur={handleBlur}
                      loading={!countries.length}
                      error={(touched.country && errors.country) || ''}
                    />
                  </div>

                  <SelectInput
                    options={paymentOptions}
                    displayValue="name"
                    actualValue="id"
                    name="payoutMethod"
                    value={values.payoutMethod}
                    label="Payout Method"
                    onChange={handleChange}
                    onBlur={handleBlur}
                    loading={!paymentOptions.length}
                    error={(touched.payoutMethod && errors.payoutMethod) || ''}
                  />

                  <SelectInput
                    options={BankNames}
                    displayValue="name"
                    actualValue="id"
                    name="bankName"
                    value={values.bankName}
                    label="Bank Name"
                    onChange={handleChange}
                    onBlur={handleBlur}
                    loading={!BankNames.length}
                    error={(touched.bankName && errors.bankName) || ''}
                  />
                  <Input
                    type="tel"
                    label="Account Number"
                    placeholder="account number"
                    value={values.accountNumber}
                    name="accountNumber"
                    onChange={handleChange}
                    onBlur={handleBlur}
                    hasError={errors.accountNumber && touched.accountNumber}
                    error={errors.accountNumber}
                  />
                </div>
                <Button
                  label="Submit"
                  type="submit"
                  onClick={() => {}}
                  className="employee-onboard__submit-btn"
                  primary
                />
              </form>
            );
          }}
        </Formik>
        <div className="employee-onboard__sign-up">
          <p className="employee-onboard__sign-up-text">
            Please ensure your details are correct before submitting.
          </p>
        </div>
      </div>
    </div>
  );
};
export default EmployeeOnboard;
