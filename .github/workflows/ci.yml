# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Build and deploy
on:
  push:
    branches: [dev, main]
jobs:
  build-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn-lock.json') }}-${{ hashFiles('**/*.js') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn-lock.json') }}-
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sparkpay-fe
          IMAGE_TAG: ${{ github.run_number }}
          NEXT_PUBLIC_API_URL: https://api.sparkpayhq.com
          NEXT_PUBLIC_PAYSTACK_KEY: pk_live_c084fb719880036900c1f93f16018447e6760ecd
          NEXT_PUBLIC_JWT_KEY: cGtfdGVzdF8zMmRhNWY5N2Q0ZDIyYjE3ZDYzYjdlYTRkMmQ1MTAzNmY3YWZmOTE0
          NEXT_PUBLIC_EMPLOYEE_UPLOAD_SAMPLE: data:@file/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,
        run: |
          # Build a docker container and push it to ECR
          yarn install
          yarn build
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest-prod .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-prod
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest-prod"

      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definitions/production.json
          container-name: sparkpay-fe
          image: '${{ steps.build-image.outputs.image }}'

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: sparkpay-fe
          cluster: sparkpay-fe
          wait-for-service-stability: true
  build-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn-lock.json') }}-${{ hashFiles('**/*.js') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn-lock.json') }}-
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sparkpay-fe
          IMAGE_TAG: ${{ github.run_number }}
          NEXT_PUBLIC_API_URL: https://devapi.sparkpayhq.com
          NEXT_PUBLIC_PAYSTACK_KEY: pk_test_0c5091a3d62e119d13cfb685d63598966385fddc
          NEXT_PUBLIC_JWT_KEY: cGtfdGVzdF8zMmRhNWY5N2Q0ZDIyYjE3ZDYzYjdlYTRkMmQ1MTAzNmY3YWZmOTE0
          NEXT_PUBLIC_EMPLOYEE_UPLOAD_SAMPLE: data:@file/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,
        run: |
          # Build a docker container and push it to ECR
          yarn install
          yarn build
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest-dev .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-dev
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest-dev"

      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definitions/staging.json
          container-name: sparkpay-staging-fe
          image: '${{ steps.build-image.outputs.image }}'

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: sparkpay-staging-fe-service
          cluster: sparkpay-staging-fe
          wait-for-service-stability: true
